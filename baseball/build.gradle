// 追加
buildscript {
    ext {
        dockerComposePluginVersion = "0.17.6"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:${dockerComposePluginVersion}"
    }
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    //implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation 'com.auth0:java-jwt:3.19.2'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.jsoup:jsoup:1.17.2'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
}

tasks.named('test') {
  useJUnitPlatform()
}

apply plugin: "docker-compose"
//追加
dockerCompose {
    useComposeFiles = ["docker/docker-compose.yml"]
}
